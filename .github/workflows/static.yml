name: Build mkdocs site and deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install MkDocs dependencies
        run: uv pip install --system mkdocs mkdocs-material PyYAML
      
      - name: Populate index folders
        run: |
          uv run python3 scripts/build/docs_add_indexes.py

      - name: Build MkDocs site
        run: mkdocs build

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./docs_site"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # New: Parallel org-site deployment
      - name: Configure SSH for Org Repo
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DPD_DEPLOY_KEY }}

      - name: Push to digitalpalidictionary.github.io
        run: |
          # Clone the destination repo into a specific directory
          git clone git@github.com:digitalpalidictionary/digitalpalidictionary.github.io.git dest_repo
          cd dest_repo

          # Delete existing content, preserving .git and .github directories at the root
          find . -mindepth 1 -maxdepth 1 ! -name '.git' ! -name '.github' -exec rm -rf {} +

          # Copy the new site content from the build directory (relative path from original checkout)
          cp -a ../docs_site/. .

          # Configure git, add, commit, push
          git config user.name "DPD Bot"
          git config user.email "dpdbot@example.com"
          git add .
          # Commit only if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "Update site: $(date +'%Y-%m-%d %H:%M:%S')"
            git push origin main
          else
            echo "No changes to commit."
          fi
